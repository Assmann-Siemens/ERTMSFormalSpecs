<Dictionary
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:noNamespaceSchemaLocation="DataDictionary.xsd"
>
<Specification
 Name="Requirements"
>
</Specification><NameSpaces>
<NameSpace
 Name="Backup"
>
<Structures>
<Structure
 Name="DualEVCMode"
>
<StructureElement
 TypeName="DataState"
 Default="DataState.Unknown"
 Mode="Internal"
 Name="RemoteControlled"
>
</StructureElement><StructureElement
 TypeName="SlaveEngineMode"
 Default="SlaveEngineMode.Unknown"
 Mode="Incoming"
 Name="Mode"
>
</StructureElement><StructureElement
 TypeName="LeadingOrSlaveMode"
 Default="LeadingOrSlaveMode.Unknown"
 Mode="Internal"
 Name="LeadingOrSlave"
>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="False"
 Mode="Outgoing"
 Name="ApplyRemoteControl"
>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="False"
 Mode="Constant"
 Name="AllowRemoteControl"
>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="False"
 Mode="Incoming"
 Name="IsRemoteControlled"
>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="False"
 Mode="Constant"
 Name="DualEVCMode"
>
</StructureElement></Structure><Structure
 Name="STMData"
>
<Comment></Comment>
<StructureElement
 TypeName="STM"
 Default="STM.Unknown"
 Mode="Internal"
 Name="Value"
>
</StructureElement><StructureElement
 TypeName="DataState"
 Default="DataState.Invalid"
 Mode="Internal"
 Name="DataState"
>
</StructureElement></Structure></Structures>
<Variables>
<Variable
 Type="Kernel.DualEVCMode"
 VariableMode="Internal"
 NeedsRequirement="FALSE"
 Name="DualEVCMode"
>
</Variable></Variables>
<Rules>
<Rule
 Priority="Processing"
 Name="Train Trip Initiation"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Train Trip Initiation"
>
<PreConditions>
<PreCondition>Kernel.Mode in [Mode.FS, Mode.LS, Mode.OS, Mode.SR, Mode.SB, Mode.SH, Mode.SN, Mode.UN]</PreCondition>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Mode FS, LS, OS (E015)"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Mode FS, LS, OS (E015)"
>
<PreConditions>
<PreCondition>Kernel.Mode in [Mode.FS, Mode.LS, Mode.OS]</PreCondition>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Rule12"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule12"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
<PreCondition>Kernel.Level.Value == Level.L1</PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule16"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule16"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
<PreCondition>Kernel.Level.Value in [Level.L2, Level.L3]</PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule17"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule17"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule18"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule18"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
<PreCondition>HandleModeChange.CurrentState not in HandleModeChange.Override</PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule20"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule20"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule41"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule41"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule65"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule65"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L1, Level.L2, Level.L3]</PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule66"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule66"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule69"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule69"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Mode SR (E015)"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Mode SR (E015)"
>
<PreConditions>
<PreCondition>Kernel.Mode == Mode.SR</PreCondition>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Rule18"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule18"
>
<PreConditions>
<PreCondition>HandleModeChange.CurrentState not in HandleModeChange.Override</PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule20"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule20"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule42"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule42"
>
<PreConditions>
<PreCondition>HandleModeChange.CurrentState not in HandleModeChange.Override</PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule43"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule43"
>
<PreConditions>
<PreCondition>HandleModeChange.CurrentState not in HandleModeChange.Override</PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule36"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule36"
>
<PreConditions>
<PreCondition>HandleModeChange.CurrentState not in HandleModeChange.Override</PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule54"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule54"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
<PreCondition>HandleModeChange.CurrentState not in HandleModeChange.Override</PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule65"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule65"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L1, Level.L2, Level.L3]</PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Mode SB (E015)"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Mode SB (E015)"
>
<PreConditions>
<PreCondition>Kernel.Mode == Mode.SB</PreCondition>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Rule20"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule20"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Mode SH (E015)"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Mode SH (E015)"
>
<PreConditions>
<PreCondition>Kernel.Mode == Mode.SH</PreCondition>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Rule49"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule49"
>
<PreConditions>
<PreCondition>HandleModeChange.CurrentState not in HandleModeChange.Override</PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule52"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule52"
>
<PreConditions>
<PreCondition>HandleModeChange.CurrentState not in HandleModeChange.Override</PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule65"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule65"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L1, Level.L2, Level.L3]</PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Mode SN (E015)"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Mode SN (E015)"
>
<PreConditions>
<PreCondition>Kernel.Mode == Mode.SN</PreCondition>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Rule20"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule20"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule38"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule38"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule39"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule39"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule67"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule67"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
<PreCondition>HandleModeChange.CurrentState not in HandleModeChange.Override</PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Mode UN (E015)"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Mode UN (E015)"
>
<PreConditions>
<PreCondition>Kernel.Mode == Mode.UN</PreCondition>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Rule20"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule20"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule39"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule39"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Rule67"
>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Rule67"
>
<PreConditions>
<PreCondition>ActiveProcedure  </PreCondition>
<PreCondition>HandleModeChange.CurrentState not in HandleModeChange.Override</PreCondition>
<PreCondition>ActiveProcedure  </PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.TrainTrip</Action>
</Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="Change of Train Orientation"
>
<ReqRef
 Id="5.12"
>
</ReqRef>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Change of Train Orientation"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Closing of desk"
>
<ReqRef
 Id="5.12.2"
>
</ReqRef>
<ReqRef
 Id="5.12.3"
>
</ReqRef>
<ReqRef
 Id="5.12.4"
>
</ReqRef>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Closing of desk"
>
<PreConditions>
<PreCondition>DMI.DriverClosedTheDesk(DMI.MasterDMI())</PreCondition>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Train has a mission"
>
<ReqRef
 Id="5.12.2.3"
>
</ReqRef>
<ReqRef
 Id="5.12.3.3.1"
>
</ReqRef>
<ReqRef
 Id="5.12.2"
>
<Comment>The fact that the train has a mission is deduced from the fact that the mode is not SH, SB, PS or NP</Comment>
</ReqRef>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Train has a mission"
>
<PreConditions>
<PreCondition>Kernel.Mode in [Mode.FS, Mode.LS, Mode.SR, Mode.OS, Mode.NL, Mode.UN, Mode.SN]</PreCondition>
</PreConditions>
<Actions>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.EndOfMission</Action>
<Action>Kernel.Mode &lt;- Mode.SB</Action>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Slave engine available"
>
<ReqRef
 Id="5.12.3.2"
>
</ReqRef>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Slave engine available"
>
<PreConditions>
<PreCondition>Kernel.DualEVCMode.DualEVCMode == True</PreCondition>
</PreConditions>
<Actions>
<Action>Kernel.DualEVCMode.LeadingOrSlave &lt;- LeadingOrSlaveMode.Slave</Action>
</Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Shunting"
>
<ReqRef
 Id="5.12.3.5.1"
>
</ReqRef>
<ReqRef
 Id="5.12.4.2.1"
>
</ReqRef>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Shunting"
>
<PreConditions>
<PreCondition>Kernel.Mode == Mode.SH</PreCondition>
<PreCondition>DMI.MasterDMI().In_ContinueShuntingOnDeskClosureRequest.InputInformation.RequestStatus == Request.Response</PreCondition>
</PreConditions>
<Actions>
<Action>Kernel.Mode &lt;- Mode.PS</Action>
<Action>DMI.MasterDMI().In_ContinueShuntingOnDeskClosureRequest.InputInformation.RequestStatus &lt;- Request.Disabled</Action>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Slave engine available"
>
<ReqRef
 Id="5.12.3.2"
>
</ReqRef>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Slave engine available"
>
<PreConditions>
<PreCondition>Kernel.DualEVCMode.DualEVCMode == True</PreCondition>
</PreConditions>
<Actions>
<Action>Kernel.DualEVCMode.LeadingOrSlave &lt;- LeadingOrSlaveMode.Slave</Action>
</Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Sleeping"
>
<ReqRef
 Id="5.12.3.3.2"
>
</ReqRef>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Sleeping"
>
<PreConditions>
<PreCondition>Kernel.DualEVCMode.LeadingOrSlave == LeadingOrSlaveMode.Slave</PreCondition>
<PreCondition>Kernel.DualEVCMode.IsRemoteControlled == False</PreCondition>
<PreCondition>Kernel.Mode == Mode.SL</PreCondition>
</PreConditions>
<Actions>
<Action>Kernel.Mode &lt;- Mode.SB</Action>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Level 2, 3"
>
<ReqRef
 Id="5.12.3.3.3"
>
</ReqRef>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Level 2, 3"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L2, Level.L3]</PreCondition>
</PreConditions>
<Actions>
<Action>EURORADIO.ReportModeChangeToRBC.CurrentState &lt;- EURORADIO.ReportModeChangeToRBC.Start</Action>
</Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Opening of desk"
>
<ReqRef
 Id="5.12.3"
>
</ReqRef>
<ReqRef
 Id="5.12.4"
>
</ReqRef>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Opening of desk"
>
<PreConditions>
<PreCondition>DMI.DriverOpenedTheDesk(DMI.MasterDMI())</PreCondition>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="PS"
>
<ReqRef
 Id="5.12.3.5.2"
>
</ReqRef>
<ReqRef
 Id="5.12.4.2.2"
>
</ReqRef>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="PS"
>
<PreConditions>
<PreCondition>Kernel.Mode == Mode.PS</PreCondition>
</PreConditions>
<Actions>
<Action>Kernel.Mode &lt;- Mode.SH</Action>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Current engine is slave"
>
<ReqRef
 Id="5.12.3.2"
>
</ReqRef>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Current engine is slave"
>
<PreConditions>
<PreCondition>Kernel.DualEVCMode.LeadingOrSlave == LeadingOrSlaveMode.Slave</PreCondition>
</PreConditions>
<Actions>
<Action>Kernel.DualEVCMode.LeadingOrSlave &lt;- LeadingOrSlaveMode.Leading</Action>
</Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Two engines, NL"
>
<ReqRef
 Id="5.12.3.4.1"
>
</ReqRef>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Two engines, NL"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_NonLeadingRequest.InputInformation.RequestStatus == Request.Response</PreCondition>
<PreCondition>Kernel.DualEVCMode.DualEVCMode == True</PreCondition>
<PreCondition>Kernel.Mode != Mode.NL</PreCondition>
</PreConditions>
<Actions>
<Action>Kernel.Mode &lt;- Mode.NL</Action>
<Action>Kernel.DualEVCMode.LeadingOrSlave &lt;- LeadingOrSlaveMode.Slave</Action>
<Action>DMI.MasterDMI().In_NonLeadingRequest.InputInformation.RequestStatus == Request.Disabled</Action>
</Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Two engines, end of NL"
>
<ReqRef
 Id="5.12.3.4.2"
>
</ReqRef>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Two engines, end of NL"
>
<PreConditions>
<PreCondition>Kernel.Mode == Mode.NL</PreCondition>
<PreCondition>Kernel.DualEVCMode.DualEVCMode == True</PreCondition>
</PreConditions>
<Actions>
<Action>Kernel.Mode &lt;- Mode.SB</Action>
<Action>HandleModeChange.CurrentState &lt;- HandleModeChange.EndOfMission</Action>
</Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace></NameSpaces>
<Tests>
<Frame
 Name="Some tests"
>
<SubSequences>
<SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Sequence1"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 NeedsRequirement="FALSE"
 Name="Test case1"
>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1"
>
</Step></Steps>
</TestCase></TestCases>
</SubSequence></SubSequences>
</Frame></Tests>
<TranslationDictionary
>
<Translations>
<Translation
>
<SourceTexts>
<SourceText
 Name="The power of the on-board is switched on.
The on-board equipment changes to SB mode."
>
</SourceText></SourceTexts>
<Actions>
<Action>Kernel.PowerOn &lt;- Boolean.True</Action>
</Actions>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="Setup test sequence"
>
</SourceText></SourceTexts>
<Actions>
<Action>EURORADIO.RBCIdOrPhoneNumber.DataState &lt;- DataState.Valid</Action>
<Action>EURORADIO.RBCIdOrPhoneNumber.ID &lt;- &apos;%RBC_ID&apos;</Action>
<Action>EURORADIO.RBCIdOrPhoneNumber.PhoneNumber &lt;- &apos;%RBCPhone&apos;</Action>
<Action>Kernel.Level.DataState &lt;- DataState.Valid</Action>
<Action>Kernel.Level.Value &lt;- %Level</Action>
<Action>Kernel.Mode &lt;- %Mode</Action>
<Action>Kernel.TrainData &lt;- DataState.Valid</Action>
<Action>Kernel.TrainPositionData.DataState &lt;- DataState.Valid</Action>
<Action>Kernel.TrainPositionData.D_LRBG &lt;- %D_LRBG</Action>
<Action>Kernel.TrainPositionData.NID_LRBG &lt;- %NID_LRBG</Action>
<Action>Kernel.TrainPositionData.Q_DIR_LRBG &lt;- %Q_DIRLRBG</Action>
<Action>Kernel.TrainPositionData.Q_DIRTRAIN &lt;- %Q_DIRTRAIN</Action>
<Action>Kernel.TrainPositionData.Q_DLRBG &lt;- %Q_DLRBG</Action>
<Action>Kernel.TrainRunningNumber.Value &lt;- &apos;TR007&apos;</Action>
<Action>Kernel.TrainRunningNumber.DataState &lt;- Default.DataState.Valid</Action>
</Actions>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="The new current mode SB is RECORDED on JRU"
>
</SourceText></SourceTexts>
<Expectations>
<Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
 Name="Expectation"
>JRU.jru1.ReportModeChange.Mode == %Step_ModeIN</Expectation><Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
 Name="Expectation..."
>JRU.jru1.ReportModeChange.Request == Request.Request</Expectation></Expectations>
<PostActions>
<Action>JRU.jru1.ReportLevelChange.Request &lt;- Request.Response</Action>
</PostActions>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="Driver opens desk"
>
</SourceText></SourceTexts>
<Actions>
<Action>TIU.DeskOpen &lt;- True</Action>
</Actions>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="The actual mode SB is DISPLAYED"
>
</SourceText></SourceTexts>
<Expectations>
<Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
 Name="Expectation"
>DMI.DisplayMode == Mode.SB</Expectation></Expectations>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="The on-board equipment requires the driver to enter a Driver ID 
There is NO initial Driver ID value displayed"
>
</SourceText></SourceTexts>
<Expectations>
<Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
 Name=""
>DMI.RequestDriverId.RequestState == Request.Request</Expectation></Expectations>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="The driver enters a correct Driver ID"
>
</SourceText></SourceTexts>
<Actions>
<Action>DMI.RequestDriverId.RequestState &lt;- Request.Response</Action>
<Action>DMI.RequestDriverId.DriverID &lt;- &apos;Henry&apos;</Action>
</Actions>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="Train tries to set up a safe connection."
>
</SourceText></SourceTexts>
<Expectations>
<Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
 Name=""
>EURORADIO.RequestOpenRbcSession.RequestState == Request.Request</Expectation></Expectations>
</Translation></Translations>
</TranslationDictionary></Dictionary>
