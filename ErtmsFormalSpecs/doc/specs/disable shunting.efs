<Dictionary
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:noNamespaceSchemaLocation="DataDictionary.xsd"
>
<Specification
 Name="Requirements"
>
<Chapter
 id="1"
>
<Paragraph
 id="1.1"
 type="REQUIREMENT"
 scope="OBU_AND_TRACK"
 bl=""
 optional="FALSE"
 name=""
 status="NA"
 version="3.0.0"
 functionalBlockName=""
 Name=""
>The shunting mode must be disabled</Paragraph></Chapter></Specification><RuleDisabling>
<RuleDisabling
 Rule="Kernel.HandleModeChange.StartOfMission.S10.DriverSelectionRequested.Driver has answered.Driver has answered.E12"
 Implemented="TRUE"
 Verified="TRUE"
 Name="E12"
>
<ReqRef
 Id="1.1"
>
</ReqRef>
</RuleDisabling><RuleDisabling
 Rule="Kernel.HandleModeChange.StartOfMission.S10.InitialState.Request Driver selection"
 NeedsRequirement="FALSE"
 Name="Request Driver selection"
>
<ReqRef
 Id="1.1"
>
</ReqRef>
</RuleDisabling><RuleDisabling
 Rule="Kernel.HandleModeChange.StartOfMission.S20.Allow shunting"
 NeedsRequirement="FALSE"
 Name="Allow shunting"
>
<ReqRef
 Id="1.1"
>
</ReqRef>
</RuleDisabling></RuleDisabling>
<NameSpaces>
<NameSpace
 Name="DisableShunting"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S10 - Request Driver selection"
>
<ReqRef
 Id="Entry 5.4.3.2.S10"
>
</ReqRef>
<ReqRef
 Id="1.1"
>
</ReqRef>
<PreConditions></PreConditions>
<Actions></Actions>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Request Driver selection"
>
<PreConditions>
<PreCondition>Kernel.HandleModeChange.CurrentState in Kernel.HandleModeChange.StartOfMission.S10.InitialState</PreCondition>
</PreConditions>
<Actions>
<Action>Kernel.HandleModeChange.CurrentState &lt;- Kernel.HandleModeChange.StartOfMission.S10.DriverSelectionRequested</Action>
<Action>DMI.MasterDMI().InitiateNonLeadingRequest()</Action>
<Action>DMI.MasterDMI().InitiateTrainDataRequest()</Action>
</Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace></NameSpaces>
<Tests>
<Frame
 Name="Start of mission"
>
<SubSequences>
<SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="S10 : Selection of SH, NL or Data Entry"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Setup"
>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Initial state"
>
<Actions>
<Action>Kernel.Mode &lt;- Mode.SB</Action>
<Action>DMI.DMI1.DeskOpen &lt;- True</Action>
<Action>DMI.DMI2.DeskOpen &lt;- Boolean.False</Action>
<Action>DMI.DMI1.IsMaster &lt;- Boolean.True</Action>
<Action>Kernel.HandleModeChange.CurrentState &lt;- Kernel.HandleModeChange.NoProcedure</Action>
<Action>Kernel.TrainData.Initialize()</Action>
</Actions>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Offer selection of SH, NL or Data Entry"
>
<ReqRef
 Id="Entry 5.4.3.2.S10"
>
</ReqRef>
<ReqRef
 Id="1.1"
>
</ReqRef>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Offer possibility to select SH, NL or Data Entry"
>
<Actions>
<Action>Kernel.HandleModeChange.CurrentState &lt;- Kernel.HandleModeChange.StartOfMission.S10</Action>
<Action>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus &lt;- Request.Disabled</Action>
</Actions>
<Expectations>
<Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
>DMI.MasterDMI().In_TrainData.InputInformation.RequestStatus == Request.Request</Expectation><Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus == Request.Disabled</Expectation><Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
>DMI.MasterDMI().In_NonLeadingRequest.InputInformation.RequestStatus == Request.Request</Expectation><Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
>Kernel.HandleModeChange.CurrentState == Kernel.HandleModeChange.StartOfMission.S10.DriverSelectionRequested</Expectation></Expectations>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver cannot select SH, even so, no transition to SH mode"
>
<ReqRef
 Id="Entry 5.4.3.2.S10.1"
>
</ReqRef>
<ReqRef
 Id="Entry 5.4.3.3.19"
>
</ReqRef>
<ReqRef
 Id="1.1"
>
</ReqRef>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 : Driver selects SH (E12), Level 0"
>
<Actions>
<Action>Kernel.HandleModeChange.CurrentState &lt;- Kernel.HandleModeChange.StartOfMission.S10.DriverSelectionRequested</Action>
<Action>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus &lt;- Request.Response</Action>
<Action>Kernel.Level.Value &lt;- Level.L0</Action>
<Action>Kernel.Mode &lt;- Mode.SB</Action>
<Action>Kernel.TrainPosition.TrainPosition.DataState &lt;- DataState.Invalid</Action>
</Actions>
<Expectations>
<Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
>Kernel.HandleModeChange.CurrentState in Kernel.HandleModeChange.StartOfMission</Expectation><Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
>Kernel.Mode == Mode.SB</Expectation></Expectations>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 : Driver selects SH (E12), Level 1"
>
<Actions>
<Action>Kernel.HandleModeChange.CurrentState &lt;- Kernel.HandleModeChange.StartOfMission.S10.DriverSelectionRequested</Action>
<Action>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus &lt;- Request.Response</Action>
<Action>Kernel.Level.Value &lt;- Level.L1</Action>
<Action>Kernel.Mode &lt;- Mode.SB</Action>
<Action>Kernel.TrainPosition.TrainPosition.DataState &lt;- DataState.Invalid</Action>
</Actions>
<Expectations>
<Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
>Kernel.HandleModeChange.CurrentState in Kernel.HandleModeChange.StartOfMission</Expectation><Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
>Kernel.Mode == Mode.SB</Expectation></Expectations>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 : Driver selects SH (E12), Level NTC"
>
<Actions>
<Action>Kernel.HandleModeChange.CurrentState &lt;- Kernel.HandleModeChange.StartOfMission.S10.DriverSelectionRequested</Action>
<Action>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus &lt;- Request.Response</Action>
<Action>Kernel.Level.Value &lt;- Level.LNTC</Action>
<Action>Kernel.Mode &lt;- Mode.SB</Action>
<Action>Kernel.TrainPosition.TrainPosition.DataState &lt;- DataState.Invalid</Action>
</Actions>
<Expectations>
<Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
>Kernel.HandleModeChange.CurrentState in Kernel.HandleModeChange.StartOfMission</Expectation><Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
>Kernel.Mode == Mode.SB</Expectation></Expectations>
</Step></Steps>
</TestCase></TestCases>
</SubSequence></SubSequences>
</Frame></Tests>
<TranslationDictionary
>
<Translations>
<Translation
>
<SourceTexts>
<SourceText
 Name="The power of the on-board is switched on.
The on-board equipment changes to SB mode."
>
</SourceText></SourceTexts>
<Actions>
<Action>Kernel.PowerOn &lt;- Boolean.True</Action>
</Actions>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="Setup test sequence"
>
</SourceText></SourceTexts>
<Actions>
<Action>EURORADIO.RBCIdOrPhoneNumber.DataState &lt;- DataState.Valid</Action>
<Action>EURORADIO.RBCIdOrPhoneNumber.ID &lt;- &apos;%RBC_ID&apos;</Action>
<Action>EURORADIO.RBCIdOrPhoneNumber.PhoneNumber &lt;- &apos;%RBCPhone&apos;</Action>
<Action>Kernel.Level.DataState &lt;- DataState.Valid</Action>
<Action>Kernel.Level.Value &lt;- %Level</Action>
<Action>Kernel.Mode &lt;- %Mode</Action>
<Action>Kernel.TrainData &lt;- DataState.Valid</Action>
<Action>Kernel.TrainPositionData.DataState &lt;- DataState.Valid</Action>
<Action>Kernel.TrainPositionData.D_LRBG &lt;- %D_LRBG</Action>
<Action>Kernel.TrainPositionData.NID_LRBG &lt;- %NID_LRBG</Action>
<Action>Kernel.TrainPositionData.Q_DIR_LRBG &lt;- %Q_DIRLRBG</Action>
<Action>Kernel.TrainPositionData.Q_DIRTRAIN &lt;- %Q_DIRTRAIN</Action>
<Action>Kernel.TrainPositionData.Q_DLRBG &lt;- %Q_DLRBG</Action>
<Action>Kernel.TrainRunningNumber.Value &lt;- &apos;TR007&apos;</Action>
<Action>Kernel.TrainRunningNumber.DataState &lt;- Default.DataState.Valid</Action>
</Actions>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="The new current mode SB is RECORDED on JRU"
>
</SourceText></SourceTexts>
<Expectations>
<Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
 Name="Expectation"
>JRU.jru1.ReportModeChange.Mode == %Step_ModeIN</Expectation><Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
 Name="Expectation..."
>JRU.jru1.ReportModeChange.Request == Request.Request</Expectation></Expectations>
<PostActions>
<Action>JRU.jru1.ReportLevelChange.Request &lt;- Request.Response</Action>
</PostActions>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="Driver opens desk"
>
</SourceText></SourceTexts>
<Actions>
<Action>TIU.DeskOpen &lt;- True</Action>
</Actions>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="The actual mode SB is DISPLAYED"
>
</SourceText></SourceTexts>
<Expectations>
<Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
 Name="Expectation"
>DMI.DisplayMode == Mode.SB</Expectation></Expectations>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="The on-board equipment requires the driver to enter a Driver ID 
There is NO initial Driver ID value displayed"
>
</SourceText></SourceTexts>
<Expectations>
<Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
 Name=""
>DMI.RequestDriverId.RequestState == Request.Request</Expectation></Expectations>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="The driver enters a correct Driver ID"
>
</SourceText></SourceTexts>
<Actions>
<Action>DMI.RequestDriverId.RequestState &lt;- Request.Response</Action>
<Action>DMI.RequestDriverId.DriverID &lt;- &apos;Henry&apos;</Action>
</Actions>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="Train tries to set up a safe connection."
>
</SourceText></SourceTexts>
<Expectations>
<Expectation
 Variable=""
 Blocking="TRUE"
 DeadLine="1000"
 Name=""
>EURORADIO.RequestOpenRbcSession.RequestState == Request.Request</Expectation></Expectations>
</Translation></Translations>
</TranslationDictionary></Dictionary>
